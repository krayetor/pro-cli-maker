#!/usr/bin/env node

// index.js
const fs = require('fs');
const path = require('path');

// Questions for the User
const questions = [
    {
        type: 'input',
        name: 'projectName',
        message: 'What would you like to name your project',
        // Add validation to ensure the user types something
        validate: function (input) {
            if (/^([A-Za-z\-\_\d])+$/.test(input)) return true;
            else return 'Project name may only include letters, numbers, underscores and hypens.';
        }
    },
];

// --- Ask  the question (using dynamic import) ---
// Wraping the main logic in an async function to use 'await'
async function run() {
    try{
        // Dynamically import the inquirer
        const inquirer = (await import('inquirer')).default;

        // Now inquirer.prompt() will work
        const answers = await inquirer.prompt(questions);

        const projectName = answers.projectName;

        console.log(`Starting to create your new project called: ${projectName}`);

        
        // ---  Templates   ---
        const htmlTemplate = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"
    <meta name="name="veiwport" content="width=device-width, initial-scale=1.0">
    <title>${projectName}</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h1>Welcome to ${projectName}!</h1>
    <!-- developed by @krayetor -->
    <!-- follow me on ùïè @ x.com/krayetor -->
    <script src="script.js"></script>
</body>
</html>`;

        const cssTemplate = `/*  Generated by project-cli-maker (developed by @krayetor) follow me on ùïè @ x.com/krayetor */

body {
    background: #f4f4f4;
    font-family: Poppins;
}`;

        const jsTemplate = `/*  Generated by project-cli-maker (developed by @krayetor) follow me on ùïè @ x.com/krayetor */
   
console.log("Hello fom ${projectName}!");`;


        // ---  Script Logic ---
        fs.mkdirSync(projectName);

        // 2. Create the files *inside* the new folder
        fs.writeFileSync(path.join(projectName, 'index.html'), htmlTemplate);
        fs.writeFileSync(path.join(projectName, 'style.css'), cssTemplate);
        fs.writeFileSync(path.join(projectName, 'script.js'), jsTemplate);

        // 3. Log a final success message
        console.log('Success! Your project is ready.');
        console.log(`You can find it in the./${projectName} folder.`);

    } catch (error) {
        // handles errors 
        if (error.isTtyError) {
            console.error("Prompt couldn't be rendered in the current environment");
        } else if (fs.existsSync(error.message.split("'")[1])) {
            console.error(`Whoops! A folder named "${error.message.split("'")[1]}" already exists.`);
        }
        else {
            console.error('Something else went wrong:', error.message);
        }
        process.exit(1); // stops the script
    }
}

// call the async function to start the process
run();