#!/usr/bin/env node

// index.js
const fs = require('fs');
const path = require('path');

// Get the project name from the 3rd item in the array 
const projectName = process.argv[2];

// A quick check to make sure the user actually typed a name
if (!projectName) {
    console.error('Error: Please provide a name for your project.');
    console.log('Example: node index.js my-new-project');
    process.exit(1); // This stops the script with an error
}

// If we have a name, print a success message
console.log(`Starting to create your new project called: ${projectName}`);

//  --- Templates ---

const htmlTemplate = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"
    <meta name="name="veiwport" content="width=device-width, initial-scale=1.0">
    <title>${projectName}</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h1>Welcome to ${projectName}!</h1>
    <!-- developed by @krayetor -->
    <!-- follow me on ùïè @ x.com/krayetor -->
    <script src="script.js"></script>
</body>
</html>`;

const cssTemplate = `/*  Generated by project-cli-maker (developed by @krayetor) 
    follow me on ùïè @ x.com/krayetor */

body {
    background: #f4f4f4;
    font-family: Poppins;
}`;

const jsTemplate = `/*  Generated by project-cli-maker (developed by @krayetor) 
    follow me on ùïè @ x.com/krayetor */
   
console.log("Hello fom ${projectName}!"); `;

// ---  Script Logic ---

try {
    // 1. Create the main project folder
    fs.mkdirSync(projectName);

    // 2. Create the files *inside* the new folder
    fs.writeFileSync(path.join(projectName, 'index.html'), htmlTemplate);
    fs.writeFileSync(path.join(projectName, 'style.css'), cssTemplate);
    fs.writeFileSync(path.join(projectName, 'script.js'), jsTemplate);

    // 3. Log a final success message
    console.log('Success! Your project is ready.');
    console.log(`You can find it in the./${projectName} folder.`);

} catch (err) {
    // Log an error if something went wrong
    console.error(`Whoops! Something went wrong: ${err.message}`);
    process.exit(1); // stop the script 
}